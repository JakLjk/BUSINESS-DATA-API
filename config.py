import os
from dotenv import load_dotenv

load_dotenv()

LOG_LEVEL_STREAMING = os.getenv("LOG_LEVEL_STREAMING", "debug")
LOG_TO_POSTGRE_SQL = bool(os.getenv("LOG_TO_POSTGRE_SQL", 1))
LOG_LEVEL_POSTGRE_SQL = os.getenv("LOG_LEVEL_POSTGRE_SQL", "debug")

REDIS_HOST = os.getenv("REDIS_HOST", "redis://redis")
REDIS_PORT = os.getenv("REDIS_PORT", "6379/0")
REDIS_URL = f"{REDIS_HOST}:{REDIS_PORT}"
SCRAPE_BATCH_SIZE = os.getenv("SCRAPE_BATCH_SIZE", 40)
STALE_JOB_TRESHOLD_SECONDS = os.getenv("STALE_JOB_TRESHOLD_SECONDS", 600)

SOURCE_PSQL_HOST = os.getenv("POSTGRES_HOST", "localhost")
SOURCE_PSQL_PORT = os.getenv("POSTGRES_PORT", "5432")
SOURCE_PSQL_USER = os.getenv("POSTGRES_USER")
SOURCE_PSQL_PASSWORD = os.getenv("POSTGRES_PASSWORD")
SOURCE_PSQL_DATABASE = os.getenv("POSTGRES_DATABASE")

SOURCE_SYNC_PSQL_URL = "postgresql+psycopg://{USER}:{PASSWORD}@{HOST}:{PORT}/{DB}".format(
    USER=SOURCE_PSQL_USER,
    PASSWORD=SOURCE_PSQL_PASSWORD,
    HOST=SOURCE_PSQL_HOST,
    PORT=SOURCE_PSQL_PORT,
    DB=SOURCE_PSQL_DATABASE
)
SOURCE_ASYNC_PSQL_URL = "postgresql+asyncpg://{USER}:{PASSWORD}@{HOST}:{PORT}/{DB}".format(
    USER=SOURCE_PSQL_USER,
    PASSWORD=SOURCE_PSQL_PASSWORD,
    HOST=SOURCE_PSQL_HOST,
    PORT=SOURCE_PSQL_PORT,
    DB=SOURCE_PSQL_DATABASE
)
SOURCE_LOG_SYNC_PSQL_URL = "postgresql+psycopg://{USER}:{PASSWORD}@{HOST}:{PORT}/{DB}".format(
    USER=SOURCE_PSQL_USER,
    PASSWORD=SOURCE_PSQL_PASSWORD,
    HOST=SOURCE_PSQL_HOST,
    PORT=SOURCE_PSQL_PORT,
    DB=SOURCE_PSQL_DATABASE
)

SPARK_SINK_PSQL_HOST = os.getenv("PSQLD_SPARK_WRITE_TO_DB_HOST", "localhost")
SPARK_SINK_PSQL_PORT = os.getenv("PSQLD_SPARK_WRITE_TO_DB_PORT", "5432")
SPARK_SINK_PSQL_USER = os.getenv("PSQLD_SPARK_WRITE_TO_DB_USER")
SPARK_SINK_PSQL_PASSWORD = os.getenv("PSQLD_SPARK_WRITE_TO_DB_PASSWORD")
SPARK_SINK_PSQL_DATABASE = os.getenv("PSQLD_SPARK_WRITE_TO_DB_DATABASE")
SPARK_SINK_PSQL_SCHEME = os.getenv("PSQLD_SPARK_WRITE_TO_DD_SCHEME")

SPARK_SOURCE_KAFKA_HOST = os.getenv("PSQLD_KAFKA_STREAM_HOST", "localhost")
SPARK_SOURCE_KAFKA_PORT = os.getenv("PSQLD_KAFKA_STREAM_PORT", "9092")
SPARK_SOURCE_KAFKA_URL = f"{SPARK_SOURCE_KAFKA_HOST}:{SPARK_SOURCE_KAFKA_PORT}"
SPARK_SOURCE_KAFKA_SUB_PATH=os.getenv("PSQLD_KAFKA_STREAM_SOURCE")

SPARK_ENGINE_KRSAPI_HOST = os.getenv(
    "KRSAPI_SPARK_ENGINE_HOST",
    "spark://localhost")
SPARK_ENGINE_KRSAPI_PORT = os.getenv(
    "KRSAPI_SPARK_ENGINE_PORT",
    "7077")
SPARK_ENGINE_KRSAPI_URL = f"{SPARK_ENGINE_KRSAPI_HOST}:{SPARK_ENGINE_KRSAPI_PORT}"
SPARK_ENGINE_KRSAPI_CHECKPOINTS = os.getenv(
    "KRSAPI_SPARK_ENGINE_CHECKPOINT_PATH",
    "./spark_etl/checkpoints/krsapi_checkpoint/checkpoint_file")

SPARK_EXECUTOR_MEMORY = os.getenv("SPARK_EXECUTOR_MEMORY", "4g")
SPARK_EXECUTOR_CORES = os.getenv("SPARK_EXECUTOR_CORES", "2")